let target = Target {oName = "vizz",
                     oAddress = "printpi.local",
                     oPort = 8007,
                     oLatency = 0.2,
                     oWindow = Nothing,
                     oSchedule = Live,
                     oHandshake = False,
                     oBusPort = Nothing
                    }
    formats = [OSC "/{scene}/command"  $ ArgList [("scenecommand", Nothing)],
               OSC "/{scene}/mode"   $ ArgList [("scenemode", Nothing)],
               OSC "/{scene}/offset" $ ArgList [("sceneoffset", Nothing)],
               OSC "/{scene}/scale"  $ ArgList [("ascscale", Nothing)],
               OSC "/shape/sides" $ ArgList [("ascsides", Nothing)],
               OSC "/shape/size"  $ ArgList [("ascsize", Nothing)],
               OSC "/shape/xinc"  $ ArgList [("ascxinc", Nothing)],
               OSC "/shape/yinc"  $ ArgList [("ascyinc", Nothing)]
              ]
    command  = pS "command"
    ascmode   = pI "ascmode"
    ascoffset = pI "ascoffset"
    ascscale  = pI "ascscale"
    ascsides  = pI "ascsides"
    ascsize   = pI "ascsize"
    ascxinc   = pI "ascxinc"
    ascyinc   = pI "ascyinc"
    scene = pS "scene"
    oscmap = [(target, formats)]

stream <- startStream defaultConfig oscmap

streamReplace stream 1 $ scene "boot"
  # command "next"




streamReplace stream 2 $ ascsides "4 2 1"



  # ascoffset 10
  # ascxinc 10
  # ascyinc "10 23 34 32"
  # ascmode 0
  # ascsize 30


streamReplace stream 1 $ asccolour

hush









stream <- startStream defaultConfig oscmap

let x1 = streamReplace stream 1
    x2 = streamReplace stream 2
    x3 = streamReplace stream 3
    x4 = streamReplace stream 4


x1 $ s viz "6 3"
  # vizspeed "0.5 0.8"


x2 $ s "test2" # cut 10

x1 silence
