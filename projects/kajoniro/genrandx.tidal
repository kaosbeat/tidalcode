setcps 0.6


hush

d1 $ slow 1
    -- $ sometimesBy 0.2 (# squiz 9) 
    -- $ degradeBy 0.3
    -- $ rev  
    -- $ chop 1
    -- $ striate 2
    $ n "<[5,3,2]*<2 4 8 1> 1> 3(<2 5>,8) 4(3,7) <1 4 1 [4 3 2 ]>"
    -- $ n "[6?0.2 ,1?0.5]*8"
    # s "ldmtom:2"
    # legato 1
    # room 0.3

do
    let pat1 =  "1 1 1 <1 [~ 1]>"
    d1 $ n pat1
        # s "kick:3"
    x1 $ struct pat1 
        $ vizscene "data signal"
        # vizcommand "perspsq*8"
        # vizoption "clear*8"
    
    # gain 1

d1 silence

d3 $ while (binaryN 8 "<34232 322>") (|+ n "<-7 -12>") 
     $ every 3 (# vowel "e a")
     $ struct "[t]*16" 
     $ n "c7" 
     # s "snare" 
    --  # legato 0.5
    --  # squiz 2





d5 $ struct (binaryN 16 22483)
    $ n (irand 16)
    # sound "amencutup"  
    -- # n (irand 4)
    # gain 1


d5 $ struct "t*16" $ n (irand 16)
    # sound "amencutup"
    # gain 1.4




d2 $ rev $ n (off 0.125 (|+| 12) "c5 c5 e4 e5")
    # s "supersaw"


d6 $ degradeBy 0.4 $ sometimesBy 0.9 (# squiz 4 ) $ while (binaryN 8 32232) (|+ n "<-7 -7 -19 -12>")
    $ struct "t*16"
    $ n "c5"
    # s "supersaw"
    # legato 1
    # gain 0.8

d2 silence

d1 $ n "1 "
    # s "hardkick"
    # gain 1