hush

d10 $ slow 1
  $ n "1 <~ 1*1>  [<4 ~ 4> 5] <1*2 1 1 1*4 >"
  # s " axo"
  # legato 1
  # midichan 0

do
  let pat1 = "0 0"
  d10 $ n "1(<4>,8)" 
    # s "axo"
    # midichan pat1


slide x = accelerate (2 **| (x |/ 12) - 1)

d3 $ fast 1
  $ n "[0,3,7,10,14]"
  # sound "[pfm2]" -- , superchip]" -- eth voice
  # voice 0.2
  # gain 0.8
  |+ n "<0 0 7 7>"
  # legato "1"
  # slide "<0 2 0 -7>" -- 2nd bar slides to 7 (fifth), 4th bar goes from 7 to 0
  # midichan 0
  -- # gain 1

d3 silence

hush




setcps 0.5

1 = n (scale "minPent" "[a3 ~ a3 ~ ~ f ~ [d]][~ ~ a3 ~ ~ f ~ [a3 d]]")

d1 silence

d1 $ s "bd bd [bd sd] bd"

d3  $ s "realclaps" # speed 0.25 # unit "c"

d2 $ slice 4 (slow 4 "1 2 3 4")
  $ s "pad:1"
  # gain 0.8
  


d6 silence

do
  let pat0 = "[a c f e]"
  d6 $ fast 1 $ n pat0
    # s "pfm2"
    # gain 0.5



hush

d1  $ stack [
        arp "down" $
            n "<c6'maj d6 c6'maj d6 [c6 d6 e6] [f6 e6 d6] [e6 d6 c6] d6>" 
        , arp "up" $
            n "<[c5'maj] [b4,f,g]>"
    ] # s "superpiano"
    # delay 0.5 
    # gain 0.6

 
d1 $ whenmod 8 4 (fast 2) (sound "bd sn kurt")

d1 $ mask "t t t ~ t t ~ t" $ sound (cat ["sn*8", "[cp*4 bd*4, hc*5]"]) # n (run 8)

d1 $ slow 2 $ sew "t(13,16)" (slow 1 $ n "65*16" # s "arpy") (s "cp:3*16" # speed sine + 1.5)
  # legato 0.4

hush


d1 $ jux rev $ chunk 4 (fast 2 . (|- n 12)) $ off 0.25 (|+ 7) $ struct (iter 4 "t(5,8)")
  $ n (scale "minPent" "0 .. 7") # sound "superreese"
  # gain 0.6


d1 $ jux rev $ chunk 4 (fast 2 . (|- n 12)) $ off 0.25 (|+ 7) $ struct (iter 4 "t(5,8)")
  $ n "dom7" # sound "superreese"
  # gain 0.6


import Sound.Tidal.Chords

chordL "minor7"

chordList

d7 $ slow 2 $ n  ("'minor7 'dom7 ['min7flat9] ['minor7sharp5*2]" )
  # sound "pfm2"  --"supersaw"
  # gain 0.8
  # legato 0.8
  # octave 5

hush


startclock

do
  let pat1 = "0*2" 
  d4 $ fast 2 $ n pat1 
    # s "axo"
    # midichan pat1


d5 $ n "<2(5,8) 1*(7,8)> <4*4 ~ 2*6> <3*3 4*3 4*2>  <0 4*4> "
  # s "amencutup"
  # gain 1.3


d5 $ chop 2 $ n "1*2 [<3 3*2 3*4> <2*8?0.4 2 2 2*2> ]*2 3*2  4*2 " |> irand 4
  # s "amencutup"


d4 $n " 1*4"
  # s  "clubkick"



hush

bpm = setcps (150/60/4)

bpm


do
  let n1 = "0 ~ ~ ~ 1 ~ ~ ~"
  let n2 = "0 4 2 1 1 5 6 2"
  d7 $ loopAt 2
    $ splice 8 n2
    $ s "breaks152"
    # timescale (152/180)
  d8 $ degradeBy 0 $ fast 2 $ n "[1*1|0*2] [2|1] 4 [5|~|5] [3|1] 7*1 [8|3|2*2] <0 3>" 
    # s "amencutup"
    # hpf 800
    # lpf 1800
    # room 0.6
    # sz 0.7
